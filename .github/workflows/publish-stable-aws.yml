name: publish-stable:aws

on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  aws-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - name: 'Install makensis (apt)'
        run: sudo apt update && sudo apt install -y nsis nsis-pluginapi
      - name: Deploy on AWS
        run: |
          yarn install --ignore-scripts
          yarn release
          yarn release:win
        env:
            IS_CI: "true"
            AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
            AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  publish-sucess:
    runs-on: ubuntu-latest
    needs: [aws-publish]
    steps:
      - name: Get deploy version
        run: echo ::set-output name=SOURCE_TAG::$(curl https://api.github.com/repos/vtex/toolbelt/releases/latest -s | jq .tag_name -r)
      - name: Trigger slack notification bot [Success]
        run: 'curl --connect-timeout 30 --retry 3 --retry-delay 120 --data "status=success&user=${{ github.actor }}&platform=AWS-S3&version=${{ steps.branch_name.outputs.SOURCE_TAG }}" --header "token: ${{ secrets.TOOLBELT_NOTIFICATION_KEY }}" https://master--vtex.myvtex.com/_v/public/toolbelt-notification/status'
      - name: Trigger next workflow
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_GHA_PAT }}
          repository: vtex/homebrew-vtex
          event-type: bump-brew
  publish-failed:
    runs-on: ubuntu-latest
    needs: [aws-publish]
    if: failure()
    steps:
      - name: Get deploy version
        run: echo ::set-output name=SOURCE_TAG::$(curl https://api.github.com/repos/vtex/toolbelt/releases/latest -s | jq .tag_name -r)
      - name: Trigger slack notification bot [Fail]
        run: 'curl --connect-timeout 30 --retry 3 --retry-delay 120 --data "status=failed&user=${{ github.actor }}&platform=AWS-S3&version=${{ steps.branch_name.outputs.SOURCE_TAG }}" --header "token: ${{ secrets.TOOLBELT_NOTIFICATION_KEY }}" https://master--vtex.myvtex.com/_v/public/toolbelt-notification/status'